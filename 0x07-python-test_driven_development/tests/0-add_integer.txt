The ``0-add_integer test`` module
=================================

Using ``add_integer``
-----------------------

first import ``add_integer`` from ``0-add_integer``

	>>> add_integer = __import__('0-add_integer').add_integer

Check for module docstring:

	>>> doc_m = __import__('0-add_integer').__doc__
	>>> len(doc_m) > 1
	True

Check for function docstring:

        >>> doc_f = __import__('0-add_integer').add_integer.__doc__
	>>> len(doc_f) > 1
        True

Basic Usage:

	>>> add_integer(1, 2)
	3

Default Value:

	>>> add_integer(2)
	100

Check negative with positive:

	>>> add_integer(-2, 4)
	2

Check no argument:

	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'

Check int with float:

	>>> add_integer(2, 3.1)
	5

Check two floats:

	>>> add_integer(2.2, 3.3)
	5

Check int with string:

	>>> add_integer(4, 'school')
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Check infinitely large float:

	>>> add_integer(float("INF"), 3.4444)
	89

Check Nan:

	>>> add_integer(float('NaN'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer

Check None:

	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
